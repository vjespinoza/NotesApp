[{"D:\\ReactApps\\notes-app\\src\\index.js":"1","D:\\ReactApps\\notes-app\\src\\App.js":"2","D:\\ReactApps\\notes-app\\src\\appStyles.js":"3","D:\\ReactApps\\notes-app\\src\\components\\NavBar\\NavBar.js":"4","D:\\ReactApps\\notes-app\\src\\components\\NavBar\\style.js":"5","D:\\ReactApps\\notes-app\\src\\theme\\theme.js":"6","D:\\ReactApps\\notes-app\\src\\components\\SideBar\\Sidebar.js":"7","D:\\ReactApps\\notes-app\\src\\components\\SideBar\\style.js":"8","D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\Dashboard.js":"9","D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\style.js":"10","D:\\ReactApps\\notes-app\\src\\components\\Note\\Note.js":"11","D:\\ReactApps\\notes-app\\src\\components\\Note\\style.js":"12","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNote.js":"13","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\style.js":"14","D:\\ReactApps\\notes-app\\src\\utilities\\dashboardLayout.js":"15","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNoteContainer.js":"16","D:\\ReactApps\\notes-app\\src\\components\\NotesList\\NotesList.js":"17","D:\\ReactApps\\notes-app\\src\\components\\NotesList\\style.js":"18","D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\FormReminder.js":"19","D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\style.js":"20","D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\FormColor.js":"21","D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\style.js":"22"},{"size":410,"mtime":1612296551829,"results":"23","hashOfConfig":"24"},{"size":440,"mtime":1614116807535,"results":"25","hashOfConfig":"24"},{"size":255,"mtime":1612308088173,"results":"26","hashOfConfig":"24"},{"size":1823,"mtime":1612557090265,"results":"27","hashOfConfig":"24"},{"size":915,"mtime":1613149570188,"results":"28","hashOfConfig":"24"},{"size":646,"mtime":1612555995313,"results":"29","hashOfConfig":"24"},{"size":2079,"mtime":1612387814659,"results":"30","hashOfConfig":"24"},{"size":381,"mtime":1613149627327,"results":"31","hashOfConfig":"24"},{"size":1286,"mtime":1614037279116,"results":"32","hashOfConfig":"24"},{"size":612,"mtime":1614031587370,"results":"33","hashOfConfig":"24"},{"size":882,"mtime":1614037454611,"results":"34","hashOfConfig":"24"},{"size":410,"mtime":1612555001117,"results":"35","hashOfConfig":"24"},{"size":3013,"mtime":1614118444267,"results":"36","hashOfConfig":"24"},{"size":2232,"mtime":1614119252831,"results":"37","hashOfConfig":"24"},{"size":2316,"mtime":1613175836576,"results":"38","hashOfConfig":"24"},{"size":2663,"mtime":1614094449051,"results":"39","hashOfConfig":"24"},{"size":784,"mtime":1614037003642,"results":"40","hashOfConfig":"24"},{"size":257,"mtime":1614036720347,"results":"41","hashOfConfig":"24"},{"size":1929,"mtime":1614110978809,"results":"42","hashOfConfig":"24"},{"size":660,"mtime":1614119125015,"results":"43","hashOfConfig":"24"},{"size":2229,"mtime":1614119301282,"results":"44","hashOfConfig":"24"},{"size":837,"mtime":1614119205180,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"4ij4my",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactApps\\notes-app\\src\\index.js",[],["93","94"],"D:\\ReactApps\\notes-app\\src\\App.js",[],"D:\\ReactApps\\notes-app\\src\\appStyles.js",[],"D:\\ReactApps\\notes-app\\src\\components\\NavBar\\NavBar.js",[],"D:\\ReactApps\\notes-app\\src\\components\\NavBar\\style.js",[],"D:\\ReactApps\\notes-app\\src\\theme\\theme.js",[],"D:\\ReactApps\\notes-app\\src\\components\\SideBar\\Sidebar.js",[],"D:\\ReactApps\\notes-app\\src\\components\\SideBar\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\Dashboard.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Note\\Note.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Note\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNote.js",[],"D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\style.js",[],"D:\\ReactApps\\notes-app\\src\\utilities\\dashboardLayout.js",["95","96","97","98"],"D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNoteContainer.js",["99","100","101"],"import React from \"react\";\r\nimport CreateNote from \"./CreateNote\";\r\nimport {\r\n    NotificationsNone,\r\n    NotificationsActiveOutlined,\r\n    PaletteOutlined,\r\n    MoveToInboxOutlined,\r\n    LabelOutlined,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CreateNoteContainer = ({\r\n    notes,\r\n    setNotes,\r\n    noteAlert,\r\n    setNoteAlert,\r\n    noteBgColor,\r\n    setNoteBgColor,\r\n}) => {\r\n    const noteId = () => {\r\n        return notes.length + 1;\r\n    };\r\n    const noteTitle = () => {\r\n        return document.getElementsByName(\"title\")[0].value;\r\n    };\r\n    const noteContent = () => {\r\n        return document.getElementsByName(\"content\")[0].value;\r\n    };\r\n    const noteTimestamp = () => {\r\n        return Date.now();\r\n    };\r\n    const toggleAlert = (e) => {\r\n        if (e.currentTarget.getAttribute(\"name\") === \"alert\") {\r\n            setNoteAlert((noteAlert) => !noteAlert);\r\n        }\r\n    };\r\n    const noteReminder = () => {\r\n        const active = noteAlert;\r\n        if (active) {\r\n            return \"later\";\r\n        } else {\r\n            return \"now\";\r\n        }\r\n    };\r\n    const noteColor = () => {};\r\n    const noteArchived = () => {};\r\n    const noteTags = () => {};\r\n\r\n    const addNoteHandler = () => {\r\n        if (noteTitle() !== \"\" || noteContent() !== \"\") {\r\n            setNotes([\r\n                ...notes,\r\n                {\r\n                    id: noteId(),\r\n                    title: noteTitle(),\r\n                    content: noteContent(),\r\n                    timestamp: noteTimestamp(),\r\n                    reminder: { active: noteAlert, time: noteReminder() },\r\n                },\r\n            ]);\r\n        }\r\n        document.getElementsByName(\"title\")[0].value = \"\";\r\n        document.getElementsByName(\"content\")[0].value = \"\";\r\n        setNoteAlert(false);\r\n    };\r\n    //CreateNote footer icons\r\n    const createNoteIcons = [\r\n        {\r\n            name: \"alert\",\r\n            icon:\r\n                noteAlert === true ? (\r\n                    <NotificationsActiveOutlined />\r\n                ) : (\r\n                    <NotificationsNone />\r\n                ),\r\n        },\r\n        { name: \"color\", icon: <PaletteOutlined /> },\r\n        { name: \"archive\", icon: <MoveToInboxOutlined /> },\r\n        { name: \"tag\", icon: <LabelOutlined /> },\r\n    ];\r\n\r\n    return (\r\n        <CreateNote\r\n            notes={notes}\r\n            createNoteIcons={createNoteIcons}\r\n            noteReminder={noteReminder}\r\n            addNoteHandler={addNoteHandler}\r\n            noteTitle={noteTitle}\r\n            noteContent={noteContent}\r\n            toggleAlert={toggleAlert}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CreateNoteContainer;\r\n","D:\\ReactApps\\notes-app\\src\\components\\NotesList\\NotesList.js",["102"],"import React from \"react\";\r\nimport Note from \"../Note/Note\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport useStyles from \"./style\";\r\n\r\nconst NotesList = ({ notes }) => {\r\n    const classes = useStyles();\r\n\r\n    if (notes.length > 0) {\r\n        return (\r\n            <Container className={classes.notesListContainer}>\r\n                {notes.map((note, index) => {\r\n                    return (\r\n                        <Note\r\n                            key={index}\r\n                            title={note.title}\r\n                            content={note.content}\r\n                        />\r\n                    );\r\n                })}\r\n            </Container>\r\n        );\r\n    } else {\r\n        return <div></div>;\r\n    }\r\n};\r\n\r\nexport default NotesList;\r\n","D:\\ReactApps\\notes-app\\src\\components\\NotesList\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\FormReminder.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\FormColor.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\style.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":3,"column":7,"nodeType":"109","messageId":"110","endLine":3,"endColumn":11},{"ruleId":"111","severity":1,"message":"112","line":20,"column":24,"nodeType":"113","messageId":"114","endLine":20,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":45,"column":24,"nodeType":"113","messageId":"114","endLine":45,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":68,"column":24,"nodeType":"113","messageId":"114","endLine":68,"endColumn":26},{"ruleId":"107","severity":1,"message":"115","line":44,"column":11,"nodeType":"109","messageId":"110","endLine":44,"endColumn":20},{"ruleId":"107","severity":1,"message":"116","line":45,"column":11,"nodeType":"109","messageId":"110","endLine":45,"endColumn":23},{"ruleId":"107","severity":1,"message":"117","line":46,"column":11,"nodeType":"109","messageId":"110","endLine":46,"endColumn":19},{"ruleId":"107","severity":1,"message":"118","line":3,"column":21,"nodeType":"109","messageId":"110","endLine":3,"endColumn":31},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'test' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'noteColor' is assigned a value but never used.","'noteArchived' is assigned a value but never used.","'noteTags' is assigned a value but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]