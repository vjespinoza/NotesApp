[{"D:\\ReactApps\\notes-app\\src\\index.js":"1","D:\\ReactApps\\notes-app\\src\\App.js":"2","D:\\ReactApps\\notes-app\\src\\appStyles.js":"3","D:\\ReactApps\\notes-app\\src\\components\\NavBar\\NavBar.js":"4","D:\\ReactApps\\notes-app\\src\\components\\NavBar\\style.js":"5","D:\\ReactApps\\notes-app\\src\\theme\\theme.js":"6","D:\\ReactApps\\notes-app\\src\\components\\SideBar\\Sidebar.js":"7","D:\\ReactApps\\notes-app\\src\\components\\SideBar\\style.js":"8","D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\Dashboard.js":"9","D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\style.js":"10","D:\\ReactApps\\notes-app\\src\\components\\Note\\Note.js":"11","D:\\ReactApps\\notes-app\\src\\components\\Note\\style.js":"12","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNote.js":"13","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\style.js":"14","D:\\ReactApps\\notes-app\\src\\utilities\\dashboardLayout.js":"15","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNoteContainer.js":"16","D:\\ReactApps\\notes-app\\src\\components\\NotesList\\NotesList.js":"17","D:\\ReactApps\\notes-app\\src\\components\\NotesList\\style.js":"18","D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\FormReminder.js":"19","D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\style.js":"20","D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\FormColor.js":"21","D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\style.js":"22"},{"size":410,"mtime":1612296551829,"results":"23","hashOfConfig":"24"},{"size":1075,"mtime":1614267415045,"results":"25","hashOfConfig":"24"},{"size":255,"mtime":1612308088173,"results":"26","hashOfConfig":"24"},{"size":1823,"mtime":1612557090265,"results":"27","hashOfConfig":"24"},{"size":915,"mtime":1613149570188,"results":"28","hashOfConfig":"24"},{"size":646,"mtime":1612555995313,"results":"29","hashOfConfig":"24"},{"size":2079,"mtime":1612387814659,"results":"30","hashOfConfig":"24"},{"size":381,"mtime":1613149627327,"results":"31","hashOfConfig":"24"},{"size":1044,"mtime":1614272108801,"results":"32","hashOfConfig":"24"},{"size":612,"mtime":1614119628479,"results":"33","hashOfConfig":"24"},{"size":2728,"mtime":1614284989992,"results":"34","hashOfConfig":"24"},{"size":465,"mtime":1614200295691,"results":"35","hashOfConfig":"24"},{"size":3420,"mtime":1614194879342,"results":"36","hashOfConfig":"24"},{"size":2232,"mtime":1614119628471,"results":"37","hashOfConfig":"24"},{"size":2316,"mtime":1613175836576,"results":"38","hashOfConfig":"24"},{"size":2802,"mtime":1614267383863,"results":"39","hashOfConfig":"24"},{"size":1103,"mtime":1614284537924,"results":"40","hashOfConfig":"24"},{"size":257,"mtime":1614119628490,"results":"41","hashOfConfig":"24"},{"size":2078,"mtime":1614180761260,"results":"42","hashOfConfig":"24"},{"size":660,"mtime":1614181070664,"results":"43","hashOfConfig":"24"},{"size":2244,"mtime":1614181971361,"results":"44","hashOfConfig":"24"},{"size":837,"mtime":1614181833473,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"4ij4my",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\ReactApps\\notes-app\\src\\index.js",[],["92","93"],"D:\\ReactApps\\notes-app\\src\\App.js",[],"D:\\ReactApps\\notes-app\\src\\appStyles.js",[],"D:\\ReactApps\\notes-app\\src\\components\\NavBar\\NavBar.js",[],"D:\\ReactApps\\notes-app\\src\\components\\NavBar\\style.js",[],"D:\\ReactApps\\notes-app\\src\\theme\\theme.js",[],"D:\\ReactApps\\notes-app\\src\\components\\SideBar\\Sidebar.js",[],"D:\\ReactApps\\notes-app\\src\\components\\SideBar\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\Dashboard.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Dashboard\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\Note\\Note.js",["94"],"D:\\ReactApps\\notes-app\\src\\components\\Note\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNote.js",["95"],"import React from \"react\";\r\nimport useStyles from \"./style\";\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    InputBase,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    Button,\r\n} from \"@material-ui/core\";\r\nimport FormReminder from \"../FormReminder/FormReminder\";\r\nimport FormColor from \"../FormColorPick/FormColor\";\r\n\r\nconst CreateNote = ({\r\n    notes,\r\n    createNoteIcons,\r\n    toggleAlert,\r\n    addNoteHandler,\r\n    noteTitle,\r\n    noteContent,\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const openFormHandler = (e) => {\r\n        switch (e.currentTarget.getAttribute(\"name\")) {\r\n            case \"alert\":\r\n                document.getElementById(\"formReminder\").style.display = \"flex\";\r\n                break;\r\n            case \"color\":\r\n                document.getElementById(\"formColor\").style.display = \"flex\";\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.relPosition}>\r\n            <Card className={classes.createNoteWrapper}>\r\n                <div className={classes.noteTitle} id=\"toggleTitleDisplay\">\r\n                    <InputBase\r\n                        name=\"title\"\r\n                        className={classes.createNoteInput1}\r\n                        placeholder=\"Title...\"\r\n                        variant=\"outlined\"\r\n                        value={notes.value}\r\n                        onChange={noteTitle}\r\n                    ></InputBase>\r\n                </div>\r\n                <InputBase\r\n                    name=\"content\"\r\n                    className={classes.createNoteInput2}\r\n                    placeholder=\"Add a new note...\"\r\n                    variant=\"outlined\"\r\n                    multiline={true}\r\n                    value={notes.value}\r\n                    onChange={noteContent}\r\n                ></InputBase>\r\n                <div\r\n                    id=\"toggleFooterDisplay\"\r\n                    className={classes.createNoteFooter}\r\n                >\r\n                    <CardActionArea\r\n                        disableRipple={true}\r\n                        className={classes.focusHighlight}\r\n                    >\r\n                        <List className={classes.createNoteIcons}>\r\n                            {createNoteIcons.map((icon, index) => (\r\n                                <ListItem\r\n                                    button={true}\r\n                                    disableRipple={true}\r\n                                    className={classes.iconItem}\r\n                                    key={index}\r\n                                    name={icon.name}\r\n                                    onClick={openFormHandler}\r\n                                >\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        {icon.icon}\r\n                                    </ListItemIcon>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </CardActionArea>\r\n                    <Button\r\n                        onClick={addNoteHandler}\r\n                        className={classes.closeCreateNote}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n            <FormReminder toggleAlert={toggleAlert} />\r\n            <FormColor />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateNote;\r\n","D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\style.js",[],"D:\\ReactApps\\notes-app\\src\\utilities\\dashboardLayout.js",["96","97","98","99"],"D:\\ReactApps\\notes-app\\src\\components\\CreateNote\\CreateNoteContainer.js",[],"D:\\ReactApps\\notes-app\\src\\components\\NotesList\\NotesList.js",["100"],"D:\\ReactApps\\notes-app\\src\\components\\NotesList\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\FormReminder.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormReminder\\style.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\FormColor.js",[],"D:\\ReactApps\\notes-app\\src\\components\\FormColorPick\\style.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":19,"column":15,"nodeType":"107","messageId":"108","endLine":19,"endColumn":24},{"ruleId":"109","severity":1,"message":"110","line":26,"column":9,"nodeType":"111","messageId":"112","endLine":33,"endColumn":10},{"ruleId":"105","severity":1,"message":"113","line":3,"column":7,"nodeType":"107","messageId":"108","endLine":3,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":20,"column":24,"nodeType":"116","messageId":"117","endLine":20,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":45,"column":24,"nodeType":"116","messageId":"117","endLine":45,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":68,"column":24,"nodeType":"116","messageId":"117","endLine":68,"endColumn":26},{"ruleId":"105","severity":1,"message":"118","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'notesCopy' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'test' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]